login as: ec2-user
Authenticating with public key "imported-openssh-key"
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
[ec2-user@ip-172-31-7-72 ~]$ sudo su
[root@ip-172-31-7-72 ec2-user]# yum update -y
Last metadata expiration check: 0:11:52 ago on Tue Nov  7 17:42:22 2023.
Dependencies resolved.
Nothing to do.
Complete!
[root@ip-172-31-7-72 ec2-user]# yum install docker -y
Last metadata expiration check: 0:12:18 ago on Tue Nov  7 17:42:22 2023.
Dependencies resolved.
=================================================================================================================================================
 Package                                         Architecture                    Version                                         Repository
=================================================================================================================================================
Installing:
 docker                                          x86_64                          24.0.5-1.amzn2023.0.2                           amazonlinux
Installing dependencies:
 containerd                                      x86_64                          1.7.2-1.amzn2023.0.4                            amazonlinux
 iptables-libs                                   x86_64                          1.8.8-3.amzn2023.0.2                            amazonlinux
 iptables-nft                                    x86_64                          1.8.8-3.amzn2023.0.2                            amazonlinux
 libcgroup                                       x86_64                          3.0-1.amzn2023.0.1                              amazonlinux
 libnetfilter_conntrack                          x86_64                          1.0.8-2.amzn2023.0.2                            amazonlinux
 libnfnetlink                                    x86_64                          1.0.1-19.amzn2023.0.2                           amazonlinux
 libnftnl                                        x86_64                          1.2.2-2.amzn2023.0.2                            amazonlinux
 pigz                                            x86_64                          2.5-1.amzn2023.0.3                              amazonlinux
 runc                                            x86_64                          1.1.7-1.amzn2023.0.3                            amazonlinux

Transaction Summary
=================================================================================================================================================
Install  10 Packages

Total download size: 80 M
Installed size: 306 M
Downloading Packages:
(1/10): iptables-libs-1.8.8-3.amzn2023.0.2.x86_64.rpm                                                                                       5.3 M
(2/10): libnftnl-1.2.2-2.amzn2023.0.2.x86_64.rpm                                                                                            1.0 M
(3/10): runc-1.1.7-1.amzn2023.0.3.x86_64.rpm                                                                                                 25 M
(4/10): pigz-2.5-1.amzn2023.0.3.x86_64.rpm                                                                                                  1.5 M
(5/10): libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64.rpm                                                                                       617 k
(6/10): libcgroup-3.0-1.amzn2023.0.1.x86_64.rpm                                                                                             2.4 M
(7/10): libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64.rpm                                                                              4.2 M
(8/10): iptables-nft-1.8.8-3.amzn2023.0.2.x86_64.rpm                                                                                        5.5 M
(9/10): containerd-1.7.2-1.amzn2023.0.4.x86_64.rpm                                                                                           45 M
(10/10): docker-24.0.5-1.amzn2023.0.2.x86_64.rpm                                                                                             39 M
-------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                                                        62 M
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :
  Installing       : runc-1.1.7-1.amzn2023.0.3.x86_64
  Installing       : containerd-1.7.2-1.amzn2023.0.4.x86_64
  Running scriptlet: containerd-1.7.2-1.amzn2023.0.4.x86_64
  Installing       : libcgroup-3.0-1.amzn2023.0.1.x86_64
  Installing       : libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64
  Installing       : libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64
  Installing       : iptables-libs-1.8.8-3.amzn2023.0.2.x86_64
  Installing       : pigz-2.5-1.amzn2023.0.3.x86_64
  Installing       : libnftnl-1.2.2-2.amzn2023.0.2.x86_64
  Installing       : iptables-nft-1.8.8-3.amzn2023.0.2.x86_64
  Running scriptlet: iptables-nft-1.8.8-3.amzn2023.0.2.x86_64
  Running scriptlet: docker-24.0.5-1.amzn2023.0.2.x86_64
  Installing       : docker-24.0.5-1.amzn2023.0.2.x86_64
  Running scriptlet: docker-24.0.5-1.amzn2023.0.2.x86_64
Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /usr/lib/systemd/system/docker.socket.

  Verifying        : libnftnl-1.2.2-2.amzn2023.0.2.x86_64
  Verifying        : iptables-libs-1.8.8-3.amzn2023.0.2.x86_64
  Verifying        : runc-1.1.7-1.amzn2023.0.3.x86_64
  Verifying        : pigz-2.5-1.amzn2023.0.3.x86_64
  Verifying        : libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64
  Verifying        : libcgroup-3.0-1.amzn2023.0.1.x86_64
  Verifying        : docker-24.0.5-1.amzn2023.0.2.x86_64
  Verifying        : containerd-1.7.2-1.amzn2023.0.4.x86_64
  Verifying        : libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64
  Verifying        : iptables-nft-1.8.8-3.amzn2023.0.2.x86_64

Installed:
  containerd-1.7.2-1.amzn2023.0.4.x86_64                 docker-24.0.5-1.amzn2023.0.2.x86_64               iptables-libs-1.8.8-3.amzn2023.0.2.x86
  iptables-nft-1.8.8-3.amzn2023.0.2.x86_64               libcgroup-3.0-1.amzn2023.0.1.x86_64               libnetfilter_conntrack-1.0.8-2.amzn202
  libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64              libnftnl-1.2.2-2.amzn2023.0.2.x86_64              pigz-2.5-1.amzn2023.0.3.x86_64
  runc-1.1.7-1.amzn2023.0.3.x86_64

Complete!
[root@ip-172-31-7-72 ec2-user]# which docker
/usr/bin/docker
[root@ip-172-31-7-72 ec2-user]# which chef
/usr/bin/which: no chef in (/root/.local/bin:/root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/lib/snapd/snap/bin)
[root@ip-172-31-7-72 ec2-user]# docker -v
Docker version 24.0.5, build ced0996
[root@ip-172-31-7-72 ec2-user]# docker --version
Docker version 24.0.5, build ced0996
[root@ip-172-31-7-72 ec2-user]# service docker status
Redirecting to /bin/systemctl status docker.service
○ docker.service - Docker Application Container Engine
     Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; preset: disabled)
     Active: inactive (dead)
TriggeredBy: ○ docker.socket
       Docs: https://docs.docker.com

Nov 07 17:54:49 ip-172-31-7-72.ap-south-1.compute.internal systemd[1]: /usr/lib/systemd/system/docker.service:20: Failed to parse resource value,
[root@ip-172-31-7-72 ec2-user]# docker info
Client:
 Version:    24.0.5
 Context:    default
 Debug Mode: false
 Plugins:
  buildx: Docker Buildx (Docker Inc.)
    Version:  v0.0.0+unknown
    Path:     /usr/libexec/docker/cli-plugins/docker-buildx

Server:
ERROR: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
errors pretty printing info
[root@ip-172-31-7-72 ec2-user]# service docker start
Redirecting to /bin/systemctl start docker.service
[root@ip-172-31-7-72 ec2-user]# service docker status
Redirecting to /bin/systemctl status docker.service
● docker.service - Docker Application Container Engine
     Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; preset: disabled)
     Active: active (running) since Tue 2023-11-07 17:59:08 UTC; 39s ago
TriggeredBy: ● docker.socket
       Docs: https://docs.docker.com
    Process: 26686 ExecStartPre=/bin/mkdir -p /run/docker (code=exited, status=0/SUCCESS)
    Process: 26693 ExecStartPre=/usr/libexec/docker/docker-setup-runtimes.sh (code=exited, status=0/SUCCESS)
   Main PID: 26695 (dockerd)
      Tasks: 8
     Memory: 27.6M
        CPU: 308ms
     CGroup: /system.slice/docker.service
             └─26695 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --default-ulimit nofile=32768:65536

Nov 07 17:59:07 ip-172-31-7-72.ap-south-1.compute.internal systemd[1]: Starting docker.service - Docker Application Container Engine...
Nov 07 17:59:07 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:07.510970193Z" level=info msg="Starting up"
Nov 07 17:59:07 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:07.583668378Z" level=info msg="Loading containe
Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:08.020324235Z" level=info msg="Loading containe
Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:08.053771058Z" level=info msg="Docker daemon" c
Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:08.054197876Z" level=info msg="Daemon has compl
Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:08.104221309Z" level=info msg="API listen on /r
Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal systemd[1]: Started docker.service - Docker Application Container Engine.
[root@ip-172-31-7-72 ec2-user]# docker info
Client:
 Version:    24.0.5
 Context:    default
 Debug Mode: false
 Plugins:
  buildx: Docker Buildx (Docker Inc.)
    Version:  v0.0.0+unknown
    Path:     /usr/libexec/docker/cli-plugins/docker-buildx

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 0
 Server Version: 24.0.5
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: true
  Using metacopy: false
  Native Overlay Diff: true
  userxattr: false
 Logging Driver: json-file
 Cgroup Driver: systemd
 Cgroup Version: 2
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: io.containerd.runc.v2 runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 0cae528dd6cb557f7201036e9f43420650207b58
 runc version: f19387a6bec4944c770f7668ab51c4348d9c2f38
 init version: de40ad0
 Security Options:
  seccomp
   Profile: builtin
  cgroupns
 Kernel Version: 6.1.59-84.139.amzn2023.x86_64
 Operating System: Amazon Linux 2023
 OSType: linux
 Architecture: x86_64
 CPUs: 1
 Total Memory: 949.4MiB
 Name: ip-172-31-7-72.ap-south-1.compute.internal
 ID: 7b89dcb6-62d1-4330-8d5c-58a4debdecb7
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
[root@ip-172-31-7-72 ec2-user]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@ip-172-31-7-72 ec2-user]# docker run -it ubuntu /bin/bash
Unable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu
aece8493d397: Pull complete
Digest: sha256:2b7412e6465c3c7fc5bb21d3e6f1917c167358449fecac8176c6e496e5c1f05f
Status: Downloaded newer image for ubuntu:latest
root@16f37976f0c8:/# docker ps -a
bash: docker: command not found
root@16f37976f0c8:/# ls
bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@16f37976f0c8:/# cat /etc/os-release
PRETTY_NAME="Ubuntu 22.04.3 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.3 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=jammy
root@16f37976f0c8:/# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
ubuntu       latest    e4c58958181a   4 weeks ago   77.8MB
[root@ip-172-31-7-72 ec2-user]# docker run -it ubuntu /bin/bash
root@2be767312cfd:/# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE     COMMAND       CREATED              STATUS                      PORTS     NAMES
2be767312cfd   ubuntu    "/bin/bash"   About a minute ago   Exited (0) 38 seconds ago             practical_nash
16f37976f0c8   ubuntu    "/bin/bash"   13 minutes ago       Exited (0) 2 minutes ago              wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
ubuntu       latest    e4c58958181a   4 weeks ago   77.8MB
[root@ip-172-31-7-72 ec2-user]# docker -it centos /bin/bash
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.0.0+unknown)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/root/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with
                           "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

[root@ip-172-31-7-72 ec2-user]# docker run -it centos /bin/bash
Unable to find image 'centos:latest' locally
latest: Pulling from library/centos
a1d0c7532777: Pull complete
Digest: sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177
Status: Downloaded newer image for centos:latest
[root@16541bdbcb49 /]# docker images
bash: docker: command not found
[root@16541bdbcb49 /]# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
ubuntu       latest    e4c58958181a   4 weeks ago   77.8MB
centos       latest    5d0da3dc9764   2 years ago   231MB
[root@ip-172-31-7-72 ec2-user]# docker -i -t centos /bin/bash
unknown shorthand flag: 'i' in -i
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.0.0+unknown)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/root/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with
                           "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

[root@ip-172-31-7-72 ec2-user]# docker run -i -t centos /bin/bash
[root@e1161353b3a8 /]# cat /etc/os-release
NAME="CentOS Linux"
VERSION="8"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="8"
PLATFORM_ID="platform:el8"
PRETTY_NAME="CentOS Linux 8"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:8"
HOME_URL="https://centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"
CENTOS_MANTISBT_PROJECT="CentOS-8"
CENTOS_MANTISBT_PROJECT_VERSION="8"
[root@e1161353b3a8 /]# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE     COMMAND       CREATED              STATUS                       PORTS     NAMES
e1161353b3a8   centos    "/bin/bash"   About a minute ago   Exited (0) 16 seconds ago              friendly_mclean
16541bdbcb49   centos    "/bin/bash"   5 minutes ago        Exited (127) 4 minutes ago             recursing_austin
2be767312cfd   ubuntu    "/bin/bash"   11 minutes ago       Exited (0) 10 minutes ago              practical_nash
16f37976f0c8   ubuntu    "/bin/bash"   22 minutes ago       Exited (0) 12 minutes ago              wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins
Using default tag: latest
Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins
Using default tag: latest
Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
ubuntu       latest    e4c58958181a   4 weeks ago   77.8MB
centos       latest    5d0da3dc9764   2 years ago   231MB
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins
Using default tag: latest
Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
[root@ip-172-31-7-72 ec2-user]# Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
bash: Error: command not found
[root@ip-172-31-7-72 ec2-user]# ^C
[root@ip-172-31-7-72 ec2-user]# sudo
usage: sudo -h | -K | -k | -V
usage: sudo -v [-ABkNnS] [-g group] [-h host] [-p prompt] [-u user]
usage: sudo -l [-ABkNnS] [-g group] [-h host] [-p prompt] [-U user] [-u user] [command [arg ...]]
usage: sudo [-ABbEHkNnPS] [-r role] [-t type] [-C num] [-D directory] [-g group] [-h host] [-p prompt] [-R directory] [-T timeout] [-u user]
            [VAR=value] [-i | -s] [command [arg ...]]
usage: sudo -e [-ABkNnS] [-r role] [-t type] [-C num] [-D directory] [-g group] [-h host] [-p prompt] [-R directory] [-T timeout] [-u user] file
            ...
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins
Using default tag: latest
Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
[root@ip-172-31-7-72 ec2-user]# sudo systemctl status docker
● docker.service - Docker Application Container Engine
     Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; preset: disabled)
     Active: active (running) since Tue 2023-11-07 17:59:08 UTC; 44min ago
TriggeredBy: ● docker.socket
       Docs: https://docs.docker.com
    Process: 26686 ExecStartPre=/bin/mkdir -p /run/docker (code=exited, status=0/SUCCESS)
    Process: 26693 ExecStartPre=/usr/libexec/docker/docker-setup-runtimes.sh (code=exited, status=0/SUCCESS)
   Main PID: 26695 (dockerd)
      Tasks: 10
     Memory: 235.9M
        CPU: 8.805s
     CGroup: /system.slice/docker.service
             └─26695 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --default-ulimit nofile=32768:65536

Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T17:59:08.104221309Z" level=info msg="API listen on />
Nov 07 17:59:08 ip-172-31-7-72.ap-south-1.compute.internal systemd[1]: Started docker.service - Docker Application Container Engine.
Nov 07 18:17:07 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:17:07.248431411Z" level=info msg="ignoring event">
Nov 07 18:19:16 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:19:16.338777319Z" level=info msg="ignoring event">
Nov 07 18:25:18 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:25:18.205736581Z" level=info msg="ignoring event">
Nov 07 18:29:19 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:29:19.065916665Z" level=info msg="ignoring event">
Nov 07 18:31:26 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:31:26.260733957Z" level=error msg="Not continuing>
Nov 07 18:32:37 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:32:37.918646909Z" level=error msg="Not continuing>
Nov 07 18:38:17 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:38:17.381267262Z" level=error msg="Not continuing>
Nov 07 18:42:53 ip-172-31-7-72.ap-south-1.compute.internal dockerd[26695]: time="2023-11-07T18:42:53.204200540Z" level=error msg="Not continuing>
[root@ip-172-31-7-72 ec2-user]# sudo systemctl start docker
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins
Using default tag: latest
Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                        PORTS     NAMES
e1161353b3a8   centos    "/bin/bash"   17 minutes ago   Exited (0) 15 minutes ago               friendly_mclean
16541bdbcb49   centos    "/bin/bash"   20 minutes ago   Exited (127) 19 minutes ago             recursing_austin
2be767312cfd   ubuntu    "/bin/bash"   26 minutes ago   Exited (0) 25 minutes ago               practical_nash
16f37976f0c8   ubuntu    "/bin/bash"   38 minutes ago   Exited (0) 28 minutes ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins
Using default tag: latest
Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown
[root@ip-172-31-7-72 ec2-user]# docker run -it jenkins /bin/bash
Unable to find image 'jenkins:latest' locally
docker: Error response from daemon: manifest for jenkins:latest not found: manifest unknown: manifest unknown.
See 'docker run --help'.
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                        PORTS     NAMES
e1161353b3a8   centos    "/bin/bash"   19 minutes ago   Exited (0) 17 minutes ago               friendly_mclean
16541bdbcb49   centos    "/bin/bash"   23 minutes ago   Exited (127) 21 minutes ago             recursing_austin
2be767312cfd   ubuntu    "/bin/bash"   28 minutes ago   Exited (0) 28 minutes ago               practical_nash
16f37976f0c8   ubuntu    "/bin/bash"   40 minutes ago   Exited (0) 30 minutes ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker pull chef/chefdk
Using default tag: latest
Error response from daemon: pull access denied for chef/chefdk, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
[root@ip-172-31-7-72 ec2-user]# docker pull jenkins/jenkins
Using default tag: latest
latest: Pulling from jenkins/jenkins
8457fd5474e7: Pull complete
8020150db422: Pull complete
fbf1f31cffeb: Pull complete
a08239489750: Pull complete
0b48201e4259: Pull complete
353e367f9443: Pull complete
7148935a6d0c: Pull complete
dda8463a5195: Pull complete
787edf1a5e31: Pull complete
6282c967a793: Pull complete
a45999ace924: Pull complete
8eb3576f75aa: Pull complete
Digest: sha256:a9023d98bd095b63932e12cfcd33b8d5a29ef21256273c9867baac6879aa52e9
Status: Downloaded newer image for jenkins/jenkins:latest
docker.io/jenkins/jenkins:latest
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY        TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins   latest    283d4c216d6f   6 hours ago   476MB
ubuntu            latest    e4c58958181a   4 weeks ago   77.8MB
centos            latest    5d0da3dc9764   2 years ago   231MB
[root@ip-172-31-7-72 ec2-user]# docker pull osuosl/chef-zero
Using default tag: latest
latest: Pulling from osuosl/chef-zero
ab5ef0e58194: Pull complete
71c09459af1d: Pull complete
7478822f37d1: Pull complete
Digest: sha256:bcfb488ffb14c66e2c972ea1a0030d485eea6dd3bf89c87c2e8cacc88ced9a5b
Status: Downloaded newer image for osuosl/chef-zero:latest
docker.io/osuosl/chef-zero:latest
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins    latest    283d4c216d6f   6 hours ago   476MB
ubuntu             latest    e4c58958181a   4 weeks ago   77.8MB
centos             latest    5d0da3dc9764   2 years ago   231MB
osuosl/chef-zero   latest    636f373f3f0d   3 years ago   384MB
[root@ip-172-31-7-72 ec2-user]# docker run -it osuosl/chef-zero /bin/bash
>> Starting Chef Zero (v14.0.17)...
>> WEBrick (v1.4.2) on Rack (v2.1.2) is listening at http://0.0.0.0:8889
>> Press CTRL+C to stop

^C
>> Stopping Chef Zero...
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins    latest    283d4c216d6f   6 hours ago   476MB
ubuntu             latest    e4c58958181a   4 weeks ago   77.8MB
centos             latest    5d0da3dc9764   2 years ago   231MB
osuosl/chef-zero   latest    636f373f3f0d   3 years ago   384MB
[root@ip-172-31-7-72 ec2-user]# which chef
/usr/bin/which: no chef in (/root/.local/bin:/root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/lib/snapd/snap/bin)
[root@ip-172-31-7-72 ec2-user]# ls
[root@ip-172-31-7-72 ec2-user]# chef -v
bash: chef: command not found
[root@ip-172-31-7-72 ec2-user]# chef --v
bash: chef: command not found
[root@ip-172-31-7-72 ec2-user]# exit
exit
[ec2-user@ip-172-31-7-72 ~]$ docker images
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json": dial unix /var/run/docker.sock: connect: permission denied
[ec2-user@ip-172-31-7-72 ~]$ docker search ubuntu
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/search?term=ubuntu": dial unix /var/run/docker.sock: connect: permission denied
[ec2-user@ip-172-31-7-72 ~]$ docker run -it ubuntu /bin/bash
docker: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
[ec2-user@ip-172-31-7-72 ~]$ docker images
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json": dial unix /var/run/docker.sock: connect: permission denied
[ec2-user@ip-172-31-7-72 ~]$ yum update -y
Error: This command has to be run with superuser privileges (under the root user on most systems).
[ec2-user@ip-172-31-7-72 ~]$ yum install docker -y
Error: This command has to be run with superuser privileges (under the root user on most systems).
[ec2-user@ip-172-31-7-72 ~]$ sudo su
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins    latest    283d4c216d6f   6 hours ago   476MB
ubuntu             latest    e4c58958181a   4 weeks ago   77.8MB
centos             latest    5d0da3dc9764   2 years ago   231MB
osuosl/chef-zero   latest    636f373f3f0d   3 years ago   384MB
[root@ip-172-31-7-72 ec2-user]# docker search ubuntu
NAME                             DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
ubuntu                           Ubuntu is a Debian-based Linux operating sys…   16559     [OK]
websphere-liberty                WebSphere Liberty multi-architecture images …   297       [OK]
open-liberty                     Open Liberty multi-architecture images based…   62        [OK]
neurodebian                      NeuroDebian provides neuroscience research s…   105       [OK]
ubuntu-debootstrap               DEPRECATED; use "ubuntu" instead                52        [OK]
ubuntu-upstart                   DEPRECATED, as is Upstart (find other proces…   115       [OK]
ubuntu/nginx                     Nginx, a high-performance reverse proxy & we…   102
ubuntu/squid                     Squid is a caching proxy for the Web. Long-t…   69
ubuntu/cortex                    Cortex provides storage for Prometheus. Long…   4
ubuntu/apache2                   Apache, a secure & extensible open-source HT…   62
ubuntu/kafka                     Apache Kafka, a distributed event streaming …   37
ubuntu/prometheus                Prometheus is a systems and service monitori…   51
ubuntu/bind9                     BIND 9 is a very flexible, full-featured DNS…   64
ubuntu/mysql                     MySQL open source fast, stable, multi-thread…   53
ubuntu/zookeeper                 ZooKeeper maintains configuration informatio…   12
ubuntu/postgres                  PostgreSQL is an open source object-relation…   31
ubuntu/redis                     Redis, an open source key-value store. Long-…   19
ubuntu/grafana                   Grafana, a feature rich metrics dashboard & …   9
ubuntu/dotnet-aspnet             Chiselled Ubuntu runtime image for ASP.NET a…   13
ubuntu/memcached                 Memcached, in-memory keyvalue store for smal…   5
ubuntu/jre                       Distroless Java runtime based on Ubuntu. Lon…   8
ubuntu/dotnet-deps               Chiselled Ubuntu for self-contained .NET & A…   11
ubuntu/prometheus-alertmanager   Alertmanager handles client alerts from Prom…   9
ubuntu/dotnet-runtime            Chiselled Ubuntu runtime image for .NET apps…   13
ubuntu/cassandra                 Cassandra, an open source NoSQL distributed …   2
[root@ip-172-31-7-72 ec2-user]# docker search jenkins
NAME                           DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
jenkins                        DEPRECATED; use "jenkins/jenkins:lts" instead   5670      [OK]
jenkins/jenkins                The leading open source automation server       3751
jenkins/inbound-agent          Docker image for a Jenkins agent which can c…   118
jenkins/jnlp-slave             a Jenkins agent which can connect to Jenkins…   157                  [OK]
jenkins/ssh-agent              Docker image for Jenkins agents connected ov…   48
jenkins/slave                  base image for a Jenkins Agent, which includ…   49                   [OK]
jenkins/jnlp-agent-maven       A JNLP-based agent with Maven 3 built in        9
bitnami/jenkins                Bitnami Docker Image for Jenkins                66                   [OK]
jenkins/ssh-slave              A Jenkins slave using SSH to establish conne…   39                   [OK]
jenkins/agent                                                                  62
jenkins/jnlp-agent-ruby                                                        1
jenkins/jnlp-agent-docker                                                      9
jenkins/jnlp-agent-node                                                        1
jenkins/ath                    Jenkins Acceptance Test Harness                 1                    [OK]
jenkins/jnlp-agent-python      A JNLP-based agent with Python built in         3
jenkins/jenkins-experimental   Experimental images of Jenkins. These images…   3                    [OK]
rancher/jenkins-jenkins                                                        1
jenkins/pct                    Plugin Compat Tester - no longer published a…   5                    [OK]
rancher/jenkins-jnlp-slave                                                     0
jenkins/jenkinsfile-runner     Jenkinsfile Runner packages                     1
jenkins/core-pr-tester         Docker image for testing pull-requests sent …   1
rancher/jenkins-slave          Jenkins Build Slave                             0                    [OK]
jenkins/jnlp-agent-alpine                                                      2
jenkins/jnlp-agent-coresdk                                                     2
jenkins/evergreen              An automatically self-updating Jenkins distr…   5
[root@ip-172-31-7-72 ec2-user]# docker search centos
NAME                                         DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
centos                                       DEPRECATED; The official build of CentOS.       7665      [OK]
kasmweb/centos-7-desktop                     CentOS 7 desktop for Kasm Workspaces            41
bitnami/centos-base-buildpack                Centos base compilation image                   0                    [OK]
couchbase/centos7-systemd                    centos7-systemd images with additional debug…   8                    [OK]
continuumio/centos5_gcc5_base                                                                3
datadog/centos-i386                                                                          0
dokken/centos-7                              CentOS 7 image for kitchen-dokken               5
dokken/centos-8                              CentOS 8 image for kitchen-dokken               3
spack/centos7                                CentOS 7 with Spack preinstalled                1
dokken/centos-6                              EOL: CentOS 6 image for kitchen-dokken          0
atlas/centos7-atlasos                        ATLAS CentOS 7 Software Development OS          0
couchbase/centos-72-java-sdk                                                                 0
couchbase/centos-72-jenkins-core                                                             0
couchbase/centos-70-sdk-build                                                                0
couchbase/centos-69-sdk-build                                                                0
spack/centos6                                CentOS 6 with Spack preinstalled                1
couchbase/centos-69-sdk-nodevtoolset-build                                                   0
ustclug/centos                               Official CentOS Image with USTC Mirror          0
eclipse/centos_jdk8                          CentOS, JDK8, Maven 3, git, curl, nmap, mc, …   5                    [OK]
dokken/centos-stream-8                                                                       4
adoptopenjdk/centos7_build_image                                                             1
dokken/centos-stream-9                                                                       8
corpusops/centos-bare                        https://github.com/corpusops/docker-images/     0
corpusops/centos                             centos corpusops baseimage                      0
adoptopenjdk/centos6_build_image                                                             0
[root@ip-172-31-7-72 ec2-user]# docker run -it --name sunil ubuntu /bin/bash
root@9ce8143288c1:/# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE              COMMAND                  CREATED             STATUS                         PORTS     NAMES
9ce8143288c1   ubuntu             "/bin/bash"              20 seconds ago      Exited (0) 15 seconds ago                sunil
2e7c26a2805f   osuosl/chef-zero   "/bin/sh -c '/opt/ch…"   11 minutes ago      Exited (0) 11 minutes ago                interesting_stonebraker
e1161353b3a8   centos             "/bin/bash"              51 minutes ago      Exited (0) 50 minutes ago                friendly_mclean
16541bdbcb49   centos             "/bin/bash"              55 minutes ago      Exited (127) 54 minutes ago              recursing_austin
2be767312cfd   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago             practical_nash
16f37976f0c8   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago             wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker start sunil
sunil
[root@ip-172-31-7-72 ec2-user]# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED              STATUS          PORTS     NAMES
9ce8143288c1   ubuntu    "/bin/bash"   About a minute ago   Up 13 seconds             sunil
[root@ip-172-31-7-72 ec2-user]# docker -it --sunilsonu jenkins/jenkins /bin/bash
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.0.0+unknown)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/root/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with
                           "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

[root@ip-172-31-7-72 ec2-user]# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS     NAMES
9ce8143288c1   ubuntu    "/bin/bash"   4 minutes ago   Up 3 minutes             sunil
[root@ip-172-31-7-72 ec2-user]# docker starts sunil
docker: 'starts' is not a docker command.
See 'docker --help'
[root@ip-172-31-7-72 ec2-user]# docker start sunil
sunil
[root@ip-172-31-7-72 ec2-user]# exit
exit
[ec2-user@ip-172-31-7-72 ~]$ docker run -it --name sunilsonu ubuntu /bin/bash
docker: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create?name=sunilsonu": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
[ec2-user@ip-172-31-7-72 ~]$ sudo su
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins    latest    283d4c216d6f   6 hours ago   476MB
ubuntu             latest    e4c58958181a   4 weeks ago   77.8MB
centos             latest    5d0da3dc9764   2 years ago   231MB
osuosl/chef-zero   latest    636f373f3f0d   3 years ago   384MB
[root@ip-172-31-7-72 ec2-user]# docker start sunil
sunil
[root@ip-172-31-7-72 ec2-user]# docker -it --name sunilsonu ubuntu /bin/bash
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.0.0+unknown)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/root/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with
                           "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins    latest    283d4c216d6f   6 hours ago   476MB
ubuntu             latest    e4c58958181a   4 weeks ago   77.8MB
centos             latest    5d0da3dc9764   2 years ago   231MB
osuosl/chef-zero   latest    636f373f3f0d   3 years ago   384MB
[root@ip-172-31-7-72 ec2-user]# docker start sunil
sunil
[root@ip-172-31-7-72 ec2-user]# docker run -it --name sonusunil ubuntu /bin/bash
root@8061aebb9034:/# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker pa -a
unknown shorthand flag: 'a' in -a
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.0.0+unknown)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/root/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with
                           "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE              COMMAND                  CREATED             STATUS                           PORTS     NAMES
8061aebb9034   ubuntu             "/bin/bash"              36 seconds ago      Exited (0) 31 seconds ago                  sonusunil
9ce8143288c1   ubuntu             "/bin/bash"              9 minutes ago       Up 8 minutes                               sunil
2e7c26a2805f   osuosl/chef-zero   "/bin/sh -c '/opt/ch…"   21 minutes ago      Exited (0) 20 minutes ago                  interesting_stonebraker
e1161353b3a8   centos             "/bin/bash"              About an hour ago   Exited (0) 59 minutes ago                  friendly_mclean
16541bdbcb49   centos             "/bin/bash"              About an hour ago   Exited (127) About an hour ago             recursing_austin
2be767312cfd   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               practical_nash
16f37976f0c8   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker start sonusunil
sonusunil
[root@ip-172-31-7-72 ec2-user]# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED              STATUS          PORTS     NAMES
8061aebb9034   ubuntu    "/bin/bash"   About a minute ago   Up 10 seconds             sonusunil
9ce8143288c1   ubuntu    "/bin/bash"   10 minutes ago       Up 9 minutes              sunil
[root@ip-172-31-7-72 ec2-user]# docker start sunil
sunil
[root@ip-172-31-7-72 ec2-user]# exit
exit
[ec2-user@ip-172-31-7-72 ~]$ docker ps
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json": dial unix /var/run/docker.sock: connect: permission denied
[ec2-user@ip-172-31-7-72 ~]$ sudo su
[root@ip-172-31-7-72 ec2-user]# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES
8061aebb9034   ubuntu    "/bin/bash"   4 minutes ago    Up 2 minutes              sonusunil
9ce8143288c1   ubuntu    "/bin/bash"   13 minutes ago   Up 12 minutes             sunil
[root@ip-172-31-7-72 ec2-user]# docker attach sonusunil
root@8061aebb9034:/# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker start sonusunil
sonusunil
[root@ip-172-31-7-72 ec2-user]# docker stop sonusunil
sonusunil
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE              COMMAND                  CREATED             STATUS                           PORTS     NAMES
8061aebb9034   ubuntu             "/bin/bash"              8 minutes ago       Exited (137) 30 seconds ago                sonusunil
9ce8143288c1   ubuntu             "/bin/bash"              17 minutes ago      Up 16 minutes                              sunil
2e7c26a2805f   osuosl/chef-zero   "/bin/sh -c '/opt/ch…"   28 minutes ago      Exited (0) 28 minutes ago                  interesting_stonebraker
e1161353b3a8   centos             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               friendly_mclean
16541bdbcb49   centos             "/bin/bash"              About an hour ago   Exited (127) About an hour ago             recursing_austin
2be767312cfd   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               practical_nash
16f37976f0c8   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker rm sonusunil
sonusunil
[root@ip-172-31-7-72 ec2-user]# docker rm sunil
Error response from daemon: You cannot remove a running container 9ce8143288c1192b9f32d968857b7355565e8803170e5f2f8a9f0e2132cafaa8. Stop the container before attempting removal or force remove
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE              COMMAND                  CREATED             STATUS                           PORTS     NAMES
9ce8143288c1   ubuntu             "/bin/bash"              18 minutes ago      Up 17 minutes                              sunil
2e7c26a2805f   osuosl/chef-zero   "/bin/sh -c '/opt/ch…"   30 minutes ago      Exited (0) 29 minutes ago                  interesting_stonebraker
e1161353b3a8   centos             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               friendly_mclean
16541bdbcb49   centos             "/bin/bash"              About an hour ago   Exited (127) About an hour ago             recursing_austin
2be767312cfd   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               practical_nash
16f37976f0c8   ubuntu             "/bin/bash"              2 hours ago         Exited (0) About an hour ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker attach sunil
root@9ce8143288c1:/# exit
exit
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE              COMMAND                  CREATED             STATUS                           PORTS     NAMES
9ce8143288c1   ubuntu             "/bin/bash"              20 minutes ago      Exited (0) 10 seconds ago                  sunil
2e7c26a2805f   osuosl/chef-zero   "/bin/sh -c '/opt/ch…"   32 minutes ago      Exited (0) 31 minutes ago                  interesting_stonebraker
e1161353b3a8   centos             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               friendly_mclean
16541bdbcb49   centos             "/bin/bash"              About an hour ago   Exited (127) About an hour ago             recursing_austin
2be767312cfd   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               practical_nash
16f37976f0c8   ubuntu             "/bin/bash"              2 hours ago         Exited (0) About an hour ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker rm sunil
sunil
[root@ip-172-31-7-72 ec2-user]# docker ps -a
CONTAINER ID   IMAGE              COMMAND                  CREATED             STATUS                           PORTS     NAMES
2e7c26a2805f   osuosl/chef-zero   "/bin/sh -c '/opt/ch…"   32 minutes ago      Exited (0) 32 minutes ago                  interesting_stonebraker
e1161353b3a8   centos             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               friendly_mclean
16541bdbcb49   centos             "/bin/bash"              About an hour ago   Exited (127) About an hour ago             recursing_austin
2be767312cfd   ubuntu             "/bin/bash"              About an hour ago   Exited (0) About an hour ago               practical_nash
16f37976f0c8   ubuntu             "/bin/bash"              2 hours ago         Exited (0) About an hour ago               wonderful_heyrovsky
[root@ip-172-31-7-72 ec2-user]# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
jenkins/jenkins    latest    283d4c216d6f   6 hours ago   476MB
ubuntu             latest    e4c58958181a   4 weeks ago   77.8MB
centos             latest    5d0da3dc9764   2 years ago   231MB
osuosl/chef-zero   latest    636f373f3f0d   3 years ago   384MB
[root@ip-172-31-7-72 ec2-user]# yum install git
Last metadata expiration check: 2:08:45 ago on Tue Nov  7 17:42:22 2023.
Dependencies resolved.
=================================================================================================================================================
 Package                             Architecture              Version                                      Repository                      Size
=================================================================================================================================================
Installing:
 git                                 x86_64                    2.40.1-1.amzn2023.0.1                        amazonlinux                     57 k
Installing dependencies:
 git-core                            x86_64                    2.40.1-1.amzn2023.0.1                        amazonlinux                    4.3 M
 git-core-doc                        noarch                    2.40.1-1.amzn2023.0.1                        amazonlinux                    2.6 M
 perl-Error                          noarch                    1:0.17029-5.amzn2023.0.2                     amazonlinux                     41 k
 perl-File-Find                      noarch                    1.37-477.amzn2023.0.5                        amazonlinux                     26 k
 perl-Git                            noarch                    2.40.1-1.amzn2023.0.1                        amazonlinux                     45 k
 perl-TermReadKey                    x86_64                    2.38-9.amzn2023.0.2                          amazonlinux                     36 k
 perl-lib                            x86_64                    0.65-477.amzn2023.0.5                        amazonlinux                     15 k

Transaction Summary
=================================================================================================================================================
Install  8 Packages

Total download size: 7.1 M
Installed size: 34 M
Is this ok [y/N]: y
Downloading Packages:
(1/8): perl-lib-0.65-477.amzn2023.0.5.x86_64.rpm                                                                 238 kB/s |  15 kB     00:00
(2/8): git-2.40.1-1.amzn2023.0.1.x86_64.rpm                                                                      818 kB/s |  57 kB     00:00
(3/8): perl-Error-0.17029-5.amzn2023.0.2.noarch.rpm                                                              2.5 MB/s |  41 kB     00:00
(4/8): perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64.rpm                                                           1.1 MB/s |  36 kB     00:00
(5/8): perl-Git-2.40.1-1.amzn2023.0.1.noarch.rpm                                                                 2.7 MB/s |  45 kB     00:00
(6/8): perl-File-Find-1.37-477.amzn2023.0.5.noarch.rpm                                                           2.0 MB/s |  26 kB     00:00
(7/8): git-core-2.40.1-1.amzn2023.0.1.x86_64.rpm                                                                  14 MB/s | 4.3 MB     00:00
(8/8): git-core-doc-2.40.1-1.amzn2023.0.1.noarch.rpm                                                              11 MB/s | 2.6 MB     00:00
-------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                             18 MB/s | 7.1 MB     00:00
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                         1/1
  Installing       : git-core-2.40.1-1.amzn2023.0.1.x86_64                                                                                   1/8
  Installing       : git-core-doc-2.40.1-1.amzn2023.0.1.noarch                                                                               2/8
  Installing       : perl-File-Find-1.37-477.amzn2023.0.5.noarch                                                                             3/8
  Installing       : perl-Error-1:0.17029-5.amzn2023.0.2.noarch                                                                              4/8
  Installing       : perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                                                                             5/8
  Installing       : perl-lib-0.65-477.amzn2023.0.5.x86_64                                                                                   6/8
  Installing       : perl-Git-2.40.1-1.amzn2023.0.1.noarch                                                                                   7/8
  Installing       : git-2.40.1-1.amzn2023.0.1.x86_64                                                                                        8/8
  Running scriptlet: git-2.40.1-1.amzn2023.0.1.x86_64                                                                                        8/8
  Verifying        : git-2.40.1-1.amzn2023.0.1.x86_64                                                                                        1/8
  Verifying        : git-core-2.40.1-1.amzn2023.0.1.x86_64                                                                                   2/8
  Verifying        : perl-lib-0.65-477.amzn2023.0.5.x86_64                                                                                   3/8
  Verifying        : perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                                                                             4/8
  Verifying        : perl-Error-1:0.17029-5.amzn2023.0.2.noarch                                                                              5/8
  Verifying        : git-core-doc-2.40.1-1.amzn2023.0.1.noarch                                                                               6/8
  Verifying        : perl-Git-2.40.1-1.amzn2023.0.1.noarch                                                                                   7/8
  Verifying        : perl-File-Find-1.37-477.amzn2023.0.5.noarch                                                                             8/8

Installed:
  git-2.40.1-1.amzn2023.0.1.x86_64                git-core-2.40.1-1.amzn2023.0.1.x86_64           git-core-doc-2.40.1-1.amzn2023.0.1.noarch
  perl-Error-1:0.17029-5.amzn2023.0.2.noarch      perl-File-Find-1.37-477.amzn2023.0.5.noarch     perl-Git-2.40.1-1.amzn2023.0.1.noarch
  perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64     perl-lib-0.65-477.amzn2023.0.5.x86_64

Complete!
[root@ip-172-31-7-72 ec2-user]# git status
fatal: not a git repository (or any of the parent directories): .git
[root@ip-172-31-7-72 ec2-user]# git config --global user.name "sunilshinde"
[root@ip-172-31-7-72 ec2-user]# git config --global user.mail "sshinde917541@gmail.com"
[root@ip-172-31-7-72 ec2-user]# git clone https://github.com/Shinde9175/Docker.git
Cloning into 'Docker'...
